#!/bin/bash
# AlphaPulse Cleanup Script
# Removes unneeded directories and files

echo "üßπ Starting AlphaPulse cleanup..."

# Build artifacts (will be regenerated)
echo "üóëÔ∏è  Removing Rust build artifacts..."
if [ -d "rust-services/target" ]; then
    rm -rf rust-services/target/
    echo "   ‚úÖ Removed rust-services/target/ (~200MB)"
fi

# Python cache files (will be regenerated)
echo "üóëÔ∏è  Removing Python cache files..."
find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
find . -name "*.pyc" -delete 2>/dev/null || true
echo "   ‚úÖ Removed __pycache__ directories"

# Coverage reports (regenerated on test runs)
if [ -d "backend/htmlcov" ]; then
    rm -rf backend/htmlcov/
    echo "   ‚úÖ Removed backend/htmlcov/"
fi

if [ -f "backend/.coverage" ]; then
    rm backend/.coverage
    echo "   ‚úÖ Removed backend/.coverage"
fi

# Test cache (regenerated by pytest)
if [ -d "backend/.pytest_cache" ]; then
    rm -rf backend/.pytest_cache/
    echo "   ‚úÖ Removed backend/.pytest_cache/"
fi

# Frontend backups (old dated backups)
if [ -d "frontend/backups" ]; then
    rm -rf frontend/backups/
    echo "   ‚úÖ Removed frontend/backups/"
fi

# Empty frontend directory
if [ -d "frontend/alphapulse-ui" ]; then
    if [ "$(find frontend/alphapulse-ui -type f | wc -l)" -eq 0 ]; then
        rm -rf frontend/alphapulse-ui/
        echo "   ‚úÖ Removed empty frontend/alphapulse-ui/"
    else
        echo "   ‚ö†Ô∏è  Skipped frontend/alphapulse-ui/ (contains files)"
    fi
fi

echo ""
echo "ü§î MANUAL REVIEW NEEDED:"
echo "   üìÅ archive_ap_legacy/ (~Large) - Legacy backup, likely safe to delete"
echo "      Contains: old app.py, test files, optimization results"
echo "      Command: rm -rf archive_ap_legacy/"
echo ""
echo "‚úÖ Cleanup complete! Space saved: ~200MB+"
echo "   Build artifacts will regenerate automatically when needed."
