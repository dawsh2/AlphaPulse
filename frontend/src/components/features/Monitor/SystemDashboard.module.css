/* SystemDashboard - Professional metrics dashboard styles */

.systemDashboard {
  width: 100%;
  height: 100%;
  background: #0a0a0a;
  color: #00d4ff;
  padding: 20px;
  overflow-y: auto;
  font-family: 'IBM Plex Mono', 'SF Mono', Monaco, Consolas, monospace;
}

/* Dashboard Header */
.dashboardHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 30px;
  padding: 20px;
  background: rgba(0, 212, 255, 0.03);
  border: 1px solid rgba(0, 212, 255, 0.2);
  border-radius: 8px;
}

.dashboardTitle {
  display: flex;
  align-items: center;
  gap: 20px;
}

.dashboardTitle h1 {
  margin: 0;
  font-size: 24px;
  font-weight: 600;
  color: #00d4ff;
  text-shadow: 0 0 20px rgba(0, 212, 255, 0.5);
}

.connectionIndicator {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 6px 12px;
  background: rgba(0, 0, 0, 0.5);
  border: 1px solid rgba(0, 212, 255, 0.3);
  border-radius: 20px;
  font-size: 12px;
  text-transform: uppercase;
  letter-spacing: 1px;
}

.statusDot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  animation: pulse 2s ease-in-out infinite;
}

.statusDot.connected {
  background: #51cf66;
  box-shadow: 0 0 10px #51cf66;
}

.statusDot.disconnected {
  background: #ff6b6b;
  box-shadow: 0 0 10px #ff6b6b;
  animation: none;
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

.dashboardStats {
  display: flex;
  gap: 30px;
}

.statItem {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}

.statLabel {
  font-size: 11px;
  color: rgba(0, 212, 255, 0.6);
  text-transform: uppercase;
  letter-spacing: 1px;
  margin-bottom: 4px;
}

.statValue {
  font-size: 20px;
  font-weight: 600;
  color: #00d4ff;
  text-shadow: 0 0 10px rgba(0, 212, 255, 0.5);
}

/* Metrics Grid */
.metricsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  gap: 20px;
  margin-bottom: 30px;
}

.metricPanel {
  background: rgba(0, 212, 255, 0.02);
  border: 1px solid rgba(0, 212, 255, 0.2);
  border-radius: 8px;
  padding: 20px;
  transition: all 0.3s ease;
}

.metricPanel:hover {
  background: rgba(0, 212, 255, 0.04);
  border-color: rgba(0, 212, 255, 0.4);
  box-shadow: 0 0 30px rgba(0, 212, 255, 0.1);
}

.panelHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
}

.panelHeader h3 {
  margin: 0;
  font-size: 14px;
  font-weight: 500;
  color: rgba(0, 212, 255, 0.8);
  text-transform: uppercase;
  letter-spacing: 1px;
}

.metricValue {
  font-size: 28px;
  font-weight: 600;
  transition: all 0.3s ease;
}

.metricValue.normal {
  color: #51cf66;
  text-shadow: 0 0 10px rgba(81, 207, 102, 0.5);
}

.metricValue.warning {
  color: #ffd43b;
  text-shadow: 0 0 10px rgba(255, 212, 59, 0.5);
}

.metricValue.critical {
  color: #ff6b6b;
  text-shadow: 0 0 10px rgba(255, 107, 107, 0.5);
  animation: criticalPulse 1s ease-in-out infinite;
}

@keyframes criticalPulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; }
}

.chartContainer {
  height: 150px;
  position: relative;
}

/* Gauge Styles */
.gaugeContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 150px;
}

.circularGauge {
  position: relative;
  width: 150px;
  height: 150px;
}

.gaugeSvg {
  width: 100%;
  height: 100%;
  transform: rotate(90deg);
}

.gaugeProgress {
  transition: stroke-dasharray 0.5s ease;
  filter: drop-shadow(0 0 10px currentColor);
}

.gaugeCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  align-items: baseline;
  gap: 4px;
}

.gaugeValue {
  font-size: 36px;
  font-weight: 600;
  color: #00d4ff;
  text-shadow: 0 0 10px rgba(0, 212, 255, 0.5);
}

.gaugeUnit {
  font-size: 18px;
  color: rgba(0, 212, 255, 0.6);
}

/* Services Section */
.servicesSection {
  margin-bottom: 30px;
}

.sectionTitle {
  font-size: 18px;
  font-weight: 500;
  color: #00d4ff;
  margin: 0 0 20px 0;
  padding-bottom: 10px;
  border-bottom: 1px solid rgba(0, 212, 255, 0.2);
  text-shadow: 0 0 10px rgba(0, 212, 255, 0.3);
}

.servicesGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 15px;
}

.serviceCard {
  background: rgba(0, 212, 255, 0.02);
  border: 1px solid rgba(0, 212, 255, 0.2);
  border-radius: 6px;
  padding: 15px;
  transition: all 0.3s ease;
}

.serviceCard.healthy {
  border-color: rgba(81, 207, 102, 0.3);
  background: rgba(81, 207, 102, 0.02);
}

.serviceCard.warning {
  border-color: rgba(255, 212, 59, 0.3);
  background: rgba(255, 212, 59, 0.02);
}

.serviceCard.critical {
  border-color: rgba(255, 107, 107, 0.3);
  background: rgba(255, 107, 107, 0.02);
}

.serviceCard.offline {
  border-color: rgba(134, 142, 150, 0.3);
  background: rgba(134, 142, 150, 0.02);
  opacity: 0.6;
}

.serviceHeader {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-bottom: 12px;
}

.serviceIndicator {
  width: 10px;
  height: 10px;
  border-radius: 50%;
}

.serviceIndicator.healthy {
  background: #51cf66;
  box-shadow: 0 0 10px #51cf66;
}

.serviceIndicator.warning {
  background: #ffd43b;
  box-shadow: 0 0 10px #ffd43b;
}

.serviceIndicator.critical {
  background: #ff6b6b;
  box-shadow: 0 0 10px #ff6b6b;
}

.serviceIndicator.offline {
  background: #868e96;
}

.serviceName {
  font-size: 13px;
  font-weight: 500;
  color: #00d4ff;
}

.serviceMetrics {
  display: flex;
  flex-direction: column;
  gap: 8px;
  margin-bottom: 10px;
}

.serviceMetric {
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 11px;
}

.metricLabel {
  width: 35px;
  color: rgba(0, 212, 255, 0.6);
  text-transform: uppercase;
}

.metricBar {
  flex: 1;
  height: 4px;
  background: rgba(0, 212, 255, 0.1);
  border-radius: 2px;
  overflow: hidden;
  position: relative;
}

.metricFill {
  height: 100%;
  display: block;
  transition: width 0.5s ease;
  box-shadow: 0 0 10px currentColor;
}

.metricPercent {
  width: 35px;
  text-align: right;
  color: rgba(0, 212, 255, 0.8);
  font-weight: 500;
}

.serviceUptime {
  font-size: 11px;
  color: rgba(0, 212, 255, 0.5);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

/* Alerts Section */
.alertsSection {
  background: rgba(255, 107, 107, 0.02);
  border: 1px solid rgba(255, 107, 107, 0.2);
  border-radius: 8px;
  padding: 20px;
}

.alertsList {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

/* Data Streams Section */
.dataStreamsSection {
  grid-column: 1 / -1;
  background: rgba(0, 0, 0, 0.6);
  border: 1px solid rgba(0, 212, 255, 0.2);
  border-radius: 8px;
  padding: 20px;
  backdrop-filter: blur(10px);
  margin-bottom: 30px;
}

.streamsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
  gap: 16px;
  margin-top: 16px;
}

.streamCard {
  background: rgba(0, 0, 0, 0.8);
  border: 1px solid rgba(0, 212, 255, 0.3);
  border-radius: 8px;
  padding: 16px;
  transition: all 0.3s ease;
}

.streamCard:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 212, 255, 0.2);
}

.streamCard.connected {
  border-color: rgba(81, 207, 102, 0.5);
}

.streamCard.disconnected {
  border-color: rgba(255, 107, 107, 0.5);
  opacity: 0.7;
}

.streamCard.error {
  border-color: rgba(255, 107, 107, 0.8);
  background: rgba(255, 107, 107, 0.1);
}

.streamHeader {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 16px;
}

.streamTitle {
  display: flex;
  align-items: center;
  gap: 12px;
}

.streamIndicator {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background: rgba(255, 107, 107, 0.8);
  flex-shrink: 0;
}

.streamIndicator.connected {
  background: #51cf66;
  animation: pulse 2s infinite;
}

.streamIndicator.disconnected {
  background: rgba(255, 107, 107, 0.8);
}

.streamIndicator.error {
  background: #ff6b6b;
  animation: blink 1s infinite;
}

.streamName {
  font-size: 14px;
  font-weight: 600;
  color: #00d4ff;
  margin-bottom: 4px;
}

.streamExchange {
  font-size: 12px;
  color: rgba(0, 212, 255, 0.6);
}

.streamType {
  background: rgba(0, 212, 255, 0.2);
  color: #00d4ff;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 11px;
  font-weight: 600;
  text-transform: uppercase;
}

.streamStats {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 12px;
  margin-bottom: 12px;
}

.streamStat {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.streamStat .statLabel {
  font-size: 11px;
  color: rgba(0, 212, 255, 0.5);
  text-transform: uppercase;
}

.streamStat .statValue {
  font-size: 16px;
  font-weight: 600;
  color: #fff;
}

.streamStat .statValue.warning {
  color: #ffd43b;
}

.streamFooter {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-top: 12px;
  border-top: 1px solid rgba(0, 212, 255, 0.1);
  font-size: 12px;
}

.streamError {
  color: rgba(0, 212, 255, 0.6);
}

.streamError span {
  color: #51cf66;
  font-weight: 600;
}

.streamError span.error {
  color: #ff6b6b;
}

.streamLastMessage {
  color: rgba(0, 212, 255, 0.5);
  font-size: 11px;
}

@keyframes blink {
  0%, 50%, 100% { opacity: 1; }
  25%, 75% { opacity: 0.3; }
}

.alertItem {
  display: flex;
  align-items: center;
  gap: 15px;
  padding: 10px 15px;
  background: rgba(0, 0, 0, 0.3);
  border-left: 3px solid;
  border-radius: 4px;
  font-size: 13px;
}

.alertItem.error {
  border-color: #ff6b6b;
  background: rgba(255, 107, 107, 0.05);
}

.alertItem.warning {
  border-color: #ffd43b;
  background: rgba(255, 212, 59, 0.05);
}

.alertItem.info {
  border-color: #00d4ff;
  background: rgba(0, 212, 255, 0.05);
}

.alertTime {
  color: rgba(0, 212, 255, 0.5);
  font-size: 11px;
  min-width: 80px;
}

.alertMessage {
  flex: 1;
  color: rgba(0, 212, 255, 0.9);
}

/* Responsive Design */
@media (max-width: 1200px) {
  .metricsGrid {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  }
  
  .servicesGrid {
    grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
  }
}

@media (max-width: 768px) {
  .dashboardHeader {
    flex-direction: column;
    gap: 20px;
    align-items: flex-start;
  }
  
  .dashboardStats {
    width: 100%;
    justify-content: space-between;
  }
  
  .metricsGrid {
    grid-template-columns: 1fr;
  }
  
  .servicesGrid {
    grid-template-columns: 1fr;
  }
}