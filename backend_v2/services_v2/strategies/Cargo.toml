[package]
name = "alphapulse-strategies"
version = "0.1.0"
edition = "2021"

[[bin]]
name = "flash_arbitrage_service"
path = "src/bin/flash_arbitrage_service.rs"

[[bin]]
name = "kraken_signals_service"
path = "src/bin/kraken_signals_service.rs"

[dependencies]
# Core dependencies
alphapulse-adapter-service = { path = "../adapters" }
alphapulse-amm = { path = "../../libs/amm" }
alphapulse-state-core = { path = "../../libs/state/core" }
alphapulse-state-market = { path = "../../libs/state/market" }
alphapulse-network = { path = "../../network" }

# Protocol dependencies
alphapulse-types = { workspace = true }
alphapulse_codec = { path = "../../libs/alphapulse_codec" }

# Common dependencies
anyhow = { workspace = true }
dashmap = { workspace = true }
parking_lot = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }

# Flash arbitrage specific dependencies
ethers = { version = "2.0", features = ["ws", "rustls"] }
ethers-core = { workspace = true }
ethers-signers = "2.0"
hex = "0.4"
rand = "0.8"
reqwest = { workspace = true }
rust_decimal = { workspace = true }
rust_decimal_macros = { workspace = true }
url = { workspace = true }
zerocopy = "0.7"

[dev-dependencies]
approx = "0.5"
criterion = { workspace = true }
hex = "0.4"
mockall = "0.12"
proptest = "1.5"
rand = "0.8"
test-case = "3.1"
tokio-test = { workspace = true }

# [[bench]]
# name = "amm_math"
# harness = false

# [[bench]]
# name = "decimal_performance"
# harness = false