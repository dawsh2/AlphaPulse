# Hybrid Transport Configuration
# Combines direct transport for latency-critical channels with
# message queues for reliability-critical channels

default_mode: auto

channels:
  # Ultra-low latency signals - always direct
  arbitrage_signals:
    name: "arbitrage_signals"
    mode: direct
    criticality: ultra_low_latency
    reliability: best_effort
    default_priority: critical
    max_message_size: 4096  # 4KB for minimal overhead
    timeout: "50ms"
    retry:
      max_attempts: 1
      initial_delay: "5ms"
      max_delay: "50ms"
      backoff_multiplier: 1.0
      jitter: false

  # Market data - direct with MQ fallback
  market_data:
    name: "market_data"
    mode: direct_with_mq_fallback
    criticality: low_latency
    reliability: at_least_once
    default_priority: high
    max_message_size: 131072  # 128KB
    timeout: "2s"
    retry:
      max_attempts: 3
      initial_delay: "100ms"
      max_delay: "2s"
      backoff_multiplier: 1.5
      jitter: true
    circuit_breaker:
      failure_threshold: 3
      success_threshold: 2
      timeout: "30s"
      half_open_max_calls: 2
    mq_config:
      queue_name_template: "market_data.{node}"
      exchange: "market_data"
      routing_key_template: "market_data.{node}.{channel}"
      persistent: false  # Speed over persistence for market data
      ttl: "5m"
      consumer:
        concurrency: 4
        prefetch_count: 50
        auto_ack: true  # Fast processing
        timeout: "1s"

  # Audit trail - always message queue for reliability
  audit_trail:
    name: "audit_trail"
    mode: message_queue
    criticality: high_latency
    reliability: guaranteed_delivery
    default_priority: normal
    max_message_size: 1048576  # 1MB for detailed audit data
    timeout: "60s"
    retry:
      max_attempts: 10
      initial_delay: "1s"
      max_delay: "300s"
      backoff_multiplier: 2.0
      jitter: true
    circuit_breaker:
      failure_threshold: 5
      success_threshold: 3
      timeout: "120s"
      half_open_max_calls: 1
    mq_config:
      queue_name_template: "audit.{channel}"
      exchange: "audit"
      routing_key_template: "audit.{node}.{channel}"
      persistent: true  # Must persist audit data
      ttl: "24h"
      dead_letter_queue: "audit.dlq"
      consumer:
        concurrency: 2
        prefetch_count: 10
        auto_ack: false  # Manual ack for reliability
        timeout: "30s"

  # Risk alerts - MQ with direct fallback for redundancy
  risk_alerts:
    name: "risk_alerts"
    mode: mq_with_direct_fallback
    criticality: standard
    reliability: exactly_once
    default_priority: high
    max_message_size: 32768  # 32KB
    timeout: "10s"
    retry:
      max_attempts: 5
      initial_delay: "500ms"
      max_delay: "30s"
      backoff_multiplier: 2.0
      jitter: true
    circuit_breaker:
      failure_threshold: 3
      success_threshold: 2
      timeout: "60s"
      half_open_max_calls: 2
    mq_config:
      queue_name_template: "risk.{channel}"
      exchange: "risk"
      routing_key_template: "risk.{node}.critical"
      persistent: true
      ttl: "1h"
      consumer:
        concurrency: 3
        prefetch_count: 20
        auto_ack: false
        timeout: "15s"

  # System monitoring - message queue for collection
  system_monitoring:
    name: "system_monitoring"
    mode: message_queue
    criticality: high_latency
    reliability: at_least_once
    default_priority: background
    max_message_size: 65536  # 64KB
    timeout: "30s"
    retry:
      max_attempts: 3
      initial_delay: "2s"
      max_delay: "60s"
      backoff_multiplier: 2.0
      jitter: true
    mq_config:
      queue_name_template: "monitoring.{node}"
      exchange: "monitoring"
      routing_key_template: "monitoring.{node}.metrics"
      persistent: false  # Metrics can be lost occasionally
      ttl: "10m"
      consumer:
        concurrency: 1
        prefetch_count: 100
        auto_ack: true
        timeout: "5s"

# Sophisticated routing rules
routes:
  # Trading signals - always direct, never MQ
  - source_pattern: "strategy-*"
    target_pattern: "execution-*"
    channels: ["arbitrage_signals"]
    transport_mode: direct
    priority: 1000
    metadata:
      description: "Critical trading signals - direct only"
      sla: "sub-millisecond"

  # Market data within same zone - direct
  - source_pattern: "data-*"
    target_pattern: "strategy-*"
    channels: ["market_data"]
    transport_mode: direct
    priority: 900
    metadata:
      description: "Intra-zone market data - direct"
      network_zone: "trading"

  # Cross-zone market data - hybrid with MQ fallback
  - source_pattern: "data-*"
    target_pattern: "*"
    channels: ["market_data"]
    transport_mode: direct_with_mq_fallback
    priority: 800
    metadata:
      description: "Cross-zone market data - hybrid"

  # Risk alerts to all monitoring systems - MQ for reliability
  - source_pattern: "*"
    target_pattern: "monitor-*"
    channels: ["risk_alerts", "system_monitoring"]
    transport_mode: message_queue
    priority: 700
    metadata:
      description: "Monitoring data collection"

  # Audit trail - always MQ for compliance
  - source_pattern: "*"
    target_pattern: "audit-*"
    channels: ["audit_trail"]
    transport_mode: message_queue
    priority: 600
    metadata:
      description: "Audit data - compliance requirement"
      retention: "7 years"

  # Default route - auto-select based on channel config
  - source_pattern: "*"
    target_pattern: "*"
    channels: []
    transport_mode: auto
    priority: 1
    metadata:
      description: "Default auto-selection"

# Bridge configuration for protocol conversion
enable_bridge: true
bridge:
  direct_to_mq: true   # Convert direct messages to MQ when needed
  mq_to_direct: true   # Convert MQ messages to direct when needed
  buffer_size: 50000   # Large buffer for high throughput
  worker_threads: 4    # Multiple workers for parallel processing
  
  transformations:
    # Compress large market data when bridging to MQ
    - pattern: "market_data.*"
      transformation: compress
      target:
        transport_mode: message_queue
        target: "market_data.compressed"
        parameters:
          compression: "lz4"
          
    # Encrypt sensitive audit data
    - pattern: "audit_trail.*"
      transformation: encrypt
      target:
        transport_mode: message_queue
        target: "audit.encrypted"
        parameters:
          encryption: "chacha20poly1305"
          
    # Decompress when bridging back to direct
    - pattern: "*.compressed"
      transformation: decompress
      target:
        transport_mode: direct
        target: "{original_channel}"
        parameters:
          compression: "lz4"