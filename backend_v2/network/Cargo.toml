[package]
name = "torq-network"
version = "0.1.0"
edition = "2021"
description = "High-performance network transport system for AlphaPulse actor communication"

[features]
default = ["tcp", "udp", "compression", "encryption"]

# Transport protocols
tcp = []
udp = []
quic = ["quinn"]

# Optimization features
compression = ["lz4", "zstd", "snap"]
encryption = ["rustls", "rustls-native-certs", "chacha20poly1305", "ring"]

# Message queue backends
rabbitmq = ["lapin"]
kafka = ["rdkafka"]
redis-mq = ["redis"]
message-queues = ["rabbitmq", "kafka", "redis-mq"]

# Monitoring and metrics
monitoring = ["prometheus", "metrics"]

# Topology features  
protocol-integration = ["alphapulse-types"]  # Enable when alphapulse-types is ready
numa-optimization = []     # Enable NUMA-specific features

# Development and testing features
dev-tools = []

[dependencies]

# Note: topology module is now integrated directly into this crate

# Protocol V2 integration for TLV message validation
alphapulse-types = { path = "../libs/types", optional = true }

# Time utilities (re-exported for backward compatibility)
alphapulse-time = { path = "../libs/time" }

# Error handling
anyhow = "1.0"
async-trait = "0.1"
bincode = "1.3"                   # Fast binary serialization
byteorder = "1.5"                 # Byte order utilities for network protocols
bytes = "1.5"                     # Zero-copy byte buffer management
chacha20poly1305 = { version = "0.10", optional = true }  # Fast authenticated encryption
chrono = "0.4"                    # DateTime parsing for external timestamp validation
crc32fast = "1.3"                 # Fast CRC32 checksum for message validation
dashmap = "5.0"                   # Concurrent hashmap
futures = "0.3"

# Collections and utilities
indexmap = "2.0"

# Message Queues (optional features)
lapin = { version = "2.3", optional = true }       # RabbitMQ client
libc = "0.2"
lockfree = "0.5.1"

# Compression
lz4 = { version = "1.24", optional = true }  # Fast compression
metrics = { version = "0.21", optional = true }

# Networking
mio = "0.8"

# System-level operations
nix = { version = "0.27", features = ["socket", "net", "process", "sched"] }
parking_lot = "0.12"              # Fast synchronization primitives

# Monitoring and observability
prometheus = { version = "0.13", optional = true }
quinn = { version = "0.10", optional = true }  # QUIC implementation
rand = "0.8"                      # Random number generation
rdkafka = { version = "0.33", optional = true }    # Kafka client
redis = { version = "0.23", optional = true }      # Redis client
regex = "1.10"                    # Regular expressions for topology validation
ring = { version = "0.17", optional = true }  # Cryptographic primitives

# Encryption and security
rustls = { version = "0.21", optional = true }  # TLS implementation
rustls-native-certs = { version = "0.6", optional = true }  # Native certificate loading

# Serialization and configuration
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
snap = { version = "1.1", optional = true }  # Google Snappy
socket2 = "0.5"                   # Low-level socket control
thiserror = "1.0"
# Core async runtime
tokio = { version = "1.40", features = ["full"] }
tracing = "0.1"
tracing-subscriber = "0.3"
uuid = { version = "1.0", features = ["v4", "serde"] }
zstd = { version = "0.13", optional = true } # Better compression ratio
# alphapulse-protocol-v2 = { path = "../alphapulse-types" }  # Will be enabled later

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.5"
tempfile = "3.0"
tokio-test = "0.4"
wiremock = "0.5"                  # Mock HTTP servers for testing

[[bench]]
name = "protocol_v2_performance"
harness = false

[[bench]]
name = "mycelium_performance"
harness = false